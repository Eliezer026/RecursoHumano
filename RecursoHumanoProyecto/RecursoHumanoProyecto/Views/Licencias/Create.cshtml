@model RecursoHumanoProyecto.Models.Licencias

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Licencias</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group has-success has-feedback">
            @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
                <span class="glyphicon glyphicon form-control-feedback"></span>
            </div>
        </div>

        <div class="form-group has-success has-feedback">
            @Html.LabelFor(model => model.IdEmpleado, "IdEmpleado", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdEmpleado", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdEmpleado, "", new { @class = "text-danger" })
                <span class="glyphicon glyphicon form-control-feedback"></span>
            </div>
        </div>

        <div class="form-group has-success has-feedback">
            @Html.LabelFor(model => model.Desde, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Desde, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Desde, "", new { @class = "text-danger" })
                <span class="glyphicon glyphicon form-control-feedback"></span>
            </div>
        </div>

        <div class="form-group has-success has-feedback">
            @Html.LabelFor(model => model.Hasta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Hasta, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Hasta, "", new { @class = "text-danger" })
                <span class="glyphicon glyphicon form-control-feedback"></span>
            </div>
        </div>

        <div class="form-group has-success has-feedback">
            @Html.LabelFor(model => model.Comentario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comentario, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comentario, "", new { @class = "text-danger" })
                <span class="glyphicon glyphicon form-control-feedback"></span>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    <a class="btn btn-default" href="~/Licencias/Index">Hacia Atra</a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
