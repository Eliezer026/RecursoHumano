@model RecursoHumanoProyecto.Models.Empleados





@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Empleados</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group has-success has-feedback">
            @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
                <span class="glyphicon glyphicon form-control-feedback"></span>
            </div>
        </div>

        <div class="form-group has-success has-feedback">
            @Html.LabelFor(model => model.IdDepartamento, "IdDepartamento", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdDepartamento", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdDepartamento, "", new { @class = "text-danger" })
                <span class="glyphicon glyphicon form-control-feedback"></span>
            </div>
        </div>

        <div class="form-group has-success has-feedback">
            @Html.LabelFor(model => model.IdCargo, "IdCargo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdCargo", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdCargo, "", new { @class = "text-danger" })
                <span class="glyphicon glyphicon form-control-feedback"></span>
            </div>
        </div>

        <div class="form-group has-success has-feedback">
            @Html.LabelFor(model => model.Codigo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Codigo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Codigo, "", new { @class = "text-danger" })
                <span class="glyphicon glyphicon form-control-feedback"></span>
            </div>
        </div>

        <div class="form-group has-success has-feedback">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                <span class="glyphicon glyphicon form-control-feedback"></span>
            </div>
        </div>

        <div class="form-group has-success has-feedback">
            @Html.LabelFor(model => model.Apellido, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })
                <span class="glyphicon glyphicon form-control-feedback"></span>
            </div>
        </div>

        <div class="form-group has-success has-feedback">
            @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
                <span class="glyphicon glyphicon form-control-feedback"></span>
            </div>
        </div>





        <div class="form-group has-success has-feedback">
            @Html.LabelFor(model => model.Dias, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Dias, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Dias, "", new { @class = "text-danger" })
                <span class="glyphicon glyphicon form-control-feedback"></span>
            </div>
        </div>




        <div class="form-group has-success has-feedback">
            @Html.LabelFor(model => model.Mes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mes, "", new { @class = "text-danger" })
                <span class="glyphicon glyphicon form-control-feedback"></span>
            </div>
        </div>



        <div class="form-group has-success has-feedback">
            @Html.LabelFor(model => model.Anos, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Anos, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Anos, "", new { @class = "text-danger" })
                <span class="glyphicon glyphicon form-control-feedback"></span>
            </div>
        </div>




        <div class="form-group has-success has-feedback">
            @Html.LabelFor(model => model.Salario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Salario, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Salario, "", new { @class = "text-danger" })
                <span class="glyphicon glyphicon form-control-feedback"></span>
            </div>
        </div>

        <div class="form-group has-success has-feedback">
            @Html.LabelFor(model => model.Estatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Estatus, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Estatus, "", new { @class = "text-danger" })
                <span class="glyphicon glyphicon form-control-feedback"></span>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    <a class="btn btn-default" href="~/Empleados/Index">Hacia Atra</a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}